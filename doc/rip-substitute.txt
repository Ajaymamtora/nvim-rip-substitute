*rip-substitute.txt* Auto-generated from README.md. Do not make PRs to this file.

==============================================================================
Table of Contents                           *rip-substitute-table-of-contents*

1. rip-substitute                              |rip-substitute-rip-substitute|
  - ## Features                    |rip-substitute-rip-substitute-##-features|
  - Installation                  |rip-substitute-rip-substitute-installation|
  - Configuration                |rip-substitute-rip-substitute-configuration|
  - Limitations                    |rip-substitute-rip-substitute-limitations|
  - About the developer    |rip-substitute-rip-substitute-about-the-developer|

==============================================================================
1. rip-substitute                              *rip-substitute-rip-substitute*

A modern substitute for vim’s `:substitute` using `ripgrep`.


  [!WARNING] This plugin is still in early development and should therefore be
  considered experimental. It’s features and options are subject to change
  without notice.
- |rip-substitute-features|
- |rip-substitute-installation|
- |rip-substitute-configuration|
- |rip-substitute-usage|
- |rip-substitute-limitations|
- |rip-substitute-about-the-developer|


## FEATURES                        *rip-substitute-rip-substitute-##-features*


INSTALLATION                      *rip-substitute-rip-substitute-installation*

>lua
    -- lazy.nvim
    {
        "chrisgrieser/rip-substitute",
        keys = {
            {
                "<leader>fs",
                function() require("rip-substitute").sub() end,
                mode = { "n", "x" },
                desc = " rip substitute",
            },
        },
    },
    
    -- packer
    use {
        "chrisgrieser/rip-substitute",
    }
<


CONFIGURATION                    *rip-substitute-rip-substitute-configuration*

>lua
    -- default settings
    require("rip-substitute").setup {
        window = {
            width = 40,
            border = "single",
        },
        keymaps = {
            confirm = "<CR>",
            abort = "q",
        },
        regexOptions = {
            -- enables lookarounds and backreferences, but slower performance
            pcre2 = true,
            -- By default, rg treats `$1a` as the named capture group "1a". When set
            -- to `true`, and `$1a` is automatically changed to `${1}a` to ensure the
            -- capture group is correctly determined. Disable this setting, if you
            -- plan an using named capture groups.
            autoBraceSimpleCaptureGroups = true,
        },
        prefill = {
            normal = "cursorword", -- "cursorword"|false
            visual = "selectionFirstLine", -- "selectionFirstLine"|false
        },
        notificationOnSuccess = true,
    }
<

>lua
    require("rip-substitute").sub()
<


LIMITATIONS                        *rip-substitute-rip-substitute-limitations*

- `--multiline` is not supported yet.
- Various flags are not supported yet.


ABOUT THE DEVELOPER        *rip-substitute-rip-substitute-about-the-developer*

In my day job, I am a sociologist studying the social mechanisms underlying the
digital economy. For my PhD project, I investigate the governance of the app
economy and how software ecosystems manage the tension between innovation and
compatibility. If you are interested in this subject, feel free to get in
touch.

I also occasionally blog about vim: Nano Tips for Vim
<https://nanotipsforvim.prose.sh>

- Academic Website <https://chris-grieser.de/>
- Mastodon <https://pkm.social/@pseudometa>
- ResearchGate <https://www.researchgate.net/profile/Christopher-Grieser>
- LinkedIn <https://www.linkedin.com/in/christopher-grieser-ba693b17a/>



Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
